{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","scripts/main.js"],"names":[],"mappings":"AAAA;ACAA,YAAY,CAAC","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n//1)\n// var myvar = 'my value'; \n\n// (function() { \n//     console.log(myvar);\n//     var myvar = 'local value'; \n// })();\n\n//OUTPUT - undefined\n\n//WHY - the instance of var myvar is being hoisted to top of function but not the value, so trying to log myvar without a value\n\n//W/O HOISTING -\n\n// var myvar = 'my value';\n// (function() {\n// \tvar myvar;\n// \tconsole.log(myvar);\n// \tmyvar = 'local value';\n// })();\n\n/////////////////////////////////////////////////////////////////////////////////////\n//2)\n// var flag = true; \n\n// function test() {\n//     if(flag) {\n//         var flag = false;\n//         console.log('Switch flag from true to false');\n//     }\n//     else {\n//         flag = true;\n//         console.log('Switch flag from false to true');\n//     }\n// }\n// test();\n\n//OUTPUT - Switch flag from false to true\n\n//WHY - var flag hoisted from inside if to top of function stack, var flag; evaluates to falsy\n\n//W/O HOISTING - \n\n// var flag = true; \n\n// function test() {\n// \tvar flag;\n//     if(flag) {\n//         flag = false;\n//         console.log('Switch flag from true to false');\n//     }\n//     else {\n//         flag = true;\n//         console.log('Switch flag from false to true');\n//     }\n// }\n// test();\n\n////////////////////////////////////////////////////////////////////////////////////\n//3)\n\n// var message = 'Hello world'; \n\n// function saySomething() {\n//     console.log(message);\n//     var message = 'Foo bar';\n// }\n// saySomething();\n\n//OUTPUT - undefined\n\n//WHY - var message hoisted above console.log w/o value, evaluates to falsy value\n\n//W/O HOISTING - \n\n// var message = 'Hello world'; \n\n// function saySomething() {\n// \tvar message;\n//     console.log(message);\n//     message = 'Foo bar';\n// }\n// saySomething();\n\n////////////////////////////////////////////////////////////////////////////////////\n//4)\n\n// var message = 'Hello world'; \n\n// function saySomething() {\n//     console.log(message);\n//     message = 'Foo bar';\n// }\n// saySomething();\n\n//OUTPUT - Hello World\n\n//WHY - message is not reasigned a value until after console.log\n\n//W/O HOISTING - \n\n// var message = 'Hello world'; \n\n// function saySomething() {\n// \tmessage = 'Foo bar';\n//     console.log(message);\n// }\n// saySomething();\n\n////////////////////////////////////////////////////////////////////////////////////\n//5)\n\n// function test() {\n//     console.log(a);\n//     console.log(foo());\n\n//     var a = 1;\n//     function foo() {\n//         return 2;\n//     }\n// }\n\n// test();\n\n//OUTPUT - undefined, 2\n\n//WHY - var a is hoisted w/o value, function and return value both hoisted\n\n//W/O HOISTING - \n//  var a = 1;\n//     function foo() {\n//         return 2;\n//     }\n// function test() {\n//     console.log(a);\n//     console.log(foo());\n// }\n\n// test();\n\n////////////////////////////////////////////////////////////////////////////////////\n//6)\n\n// (function() {\n//     console.log(bar);\n//     foo();\n\n//     function foo() {\n//         console.log('aloha');\n//     }\n\n//     var bar = 1;\n//     baz = 2;\n// })();\n\n//OUTPUT - undefined, aloha, error thrown because baz is undefined\n\n//WHY - var bar hoisted w/o value is falsy, function foo hoisted with value, baz is never declared\n\n//W/O HOISTING - \n\n// (function() {\n// \tfunction foo() {\n//         console.log('aloha');\n//     }\n\n//     var bar = 1;\n//     baz = 2;\n\n//     console.log(bar);\n//     foo();\n// })();\n\n\n////////////////////////////////////////////////////////////////////////////////////\n//7)\n\n// var run = false;\n\n// function fancy(arg1, arg2) {\n//     if(run) {\n//         console.log('I can run');\n//     }\n//     else {\n//         console.log('I can\\'t run');\n//     }\n\n//     function run() {\n//         console.log('Will I run?');\n//     }\n// }\n// fancy();\n\n//OUTPUT - I can run\n\n//WHY - function run and value hoisted(takes precident over var run), evaluates to truthy\n\n//W/O HOISTING - \n\n// var run = false;\n\n// function fancy(arg1, arg2) {\n// \tfunction run() {\n//         console.log('Will I run?');\n//     }\n//     if(run) {\n//         console.log('I can run');\n//     }\n//     else {\n//         console.log('I can\\'t run');\n//     }\n// }\n// fancy();\n\n////////////////////////////////////////////////////////////////////////////////////\n//8)\n\n// var run = false;\n\n// function fancy(arg1, arg2) {\n//     if(run) {\n//         console.log('I can run');\n//     }\n//     else {\n//         console.log('I can\\'t run');\n//     }\n\n//     var run = function() {\n//         console.log('Will I run?');\n//     }\n// }\n// fancy();\n\n//OUTPUT - I can't run\n\n//WHY - var run is hoisted w/o value and evaluates to false, takes precedents over var run = false\n\n//W/O HOISTING - \n\n\n// var run = false;\n\n// function fancy(arg1, arg2) {\n// \tvar run = function() {\n//         console.log('Will I run?');\n//     }\n//     if(run) {\n//         console.log('I can run');\n//     }\n//     else {\n//         console.log('I can\\'t run');\n//     }\n// }\n// fancy();\n\n\n\n\n\n\n\n\n\n"]}